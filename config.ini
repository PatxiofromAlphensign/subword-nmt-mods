[test]
description = Generates vocabulary
argument_default = None
prefix_chars = -
conflict_handler = error
_registries = {'action': {None: <class 'argparse._StoreAction'>, 'store': <class 'argparse._StoreAction'>, 'store_const': <class 'argparse._StoreConstAction'>, 'store_true': <class 'argparse._StoreTrueAction'>, 'store_false': <class 'argparse._StoreFalseAction'>, 'append': <class 'argparse._AppendAction'>, 'append_const': <class 'argparse._AppendConstAction'>, 'count': <class 'argparse._CountAction'>, 'help': <class 'argparse._HelpAction'>, 'version': <class 'argparse._VersionAction'>, 'parsers': <class 'argparse._SubParsersAction'>, 'extend': <class 'argparse._ExtendAction'>}, 'type': {None: <function ArgumentParser.__init__.<locals>.identity at 0x7f0762d06ca0>}}
_actions = [_HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, help='show this help message and exit', metavar=None), _StoreAction(option_strings=['--input', '-i'], dest='input', nargs=None, const=None, default=<_io.TextIOWrapper name='<stdin>' mode='r' encoding='utf-8'>, type=FileType('r'), choices=None, help='Input file (default: standard input).', metavar='PATH'), _StoreAction(option_strings=['--output', '-o'], dest='output', nargs=None, const=None, default=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, type=FileType('w'), choices=None, help='Output file (default: standard output)', metavar='PATH')]
_option_string_actions = {'-h': _HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, help='show this help message and exit', metavar=None), '--help': _HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, help='show this help message and exit', metavar=None), '--input': _StoreAction(option_strings=['--input', '-i'], dest='input', nargs=None, const=None, default=<_io.TextIOWrapper name='<stdin>' mode='r' encoding='utf-8'>, type=FileType('r'), choices=None, help='Input file (default: standard input).', metavar='PATH'), '-i': _StoreAction(option_strings=['--input', '-i'], dest='input', nargs=None, const=None, default=<_io.TextIOWrapper name='<stdin>' mode='r' encoding='utf-8'>, type=FileType('r'), choices=None, help='Input file (default: standard input).', metavar='PATH'), '--output': _StoreAction(option_strings=['--output', '-o'], dest='output', nargs=None, const=None, default=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, type=FileType('w'), choices=None, help='Output file (default: standard output)', metavar='PATH'), '-o': _StoreAction(option_strings=['--output', '-o'], dest='output', nargs=None, const=None, default=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, type=FileType('w'), choices=None, help='Output file (default: standard output)', metavar='PATH')}
_action_groups = [<argparse._ArgumentGroup object at 0x7f0762dbeaf0>, <argparse._ArgumentGroup object at 0x7f0762d131c0>]
_mutually_exclusive_groups = []
_defaults = {}
_negative_number_matcher = re.compile('^-\\d+$|^-\\d*\\.\\d+$')
_has_negative_number_optionals = []
prog = 
usage = None
epilog = None
formatter_class = <class 'argparse.RawDescriptionHelpFormatter'>
fromfile_prefix_chars = None
add_help = True
allow_abbrev = True
_positionals = <argparse._ArgumentGroup object at 0x7f0762d0bd00>
_optionals = <argparse._ArgumentGroup object at 0x7f0762d13e80>
_subparsers = None

